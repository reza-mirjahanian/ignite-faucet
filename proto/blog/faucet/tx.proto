syntax = "proto3";

package blog.faucet;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "blog/faucet/params.proto";

option go_package = "blog/x/faucet/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // todo maxPerRequest and maxPerAddress are modifiable via governance
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc Mint   (MsgMint  ) returns (MsgMintResponse  );

}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                   "authority";
  option           (amino.name) = "blog/x/faucet/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgMint {
  option (cosmos.msg.v1.signer) = "requester";
  string requester = 1;
  uint64 amount   = 2;

}

message MsgMintResponse {
  uint64 amount = 1;
}


